{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA;EAEA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,CAAA;AACf,QAAA,SAAA,EAAA;IAAA,SAAA,GACE;MAAA,aAAA,EAAe,EAAf;MACA,cAAA,EAAgB;IADhB;IAEF,IAAG,OAAO,CAAC,GAAG,CAAC,gBAAf;MACE,GAAG,CAAC,eAAJ,GAAsB,KADxB;;IAEA,YAAA,GAAe,QAAA,CAAC,IAAD,EAAO,GAAP,EAAY,EAAZ,CAAA;AACb,UAAA,QAAA,EAAA,CAAA,EAAA,GAAA,EAAA;MAAA,IAAG,SAAU,CAAA,IAAA,CAAV,IAAoB,SAAU,CAAA,IAAA,CAAK,CAAC,MAAvC;AACE;QAAA,KAAA,qCAAA;;UACE,QAAA,CAAS,GAAT;QADF,CADF;;wCAGA;IAJa;IAKf,GAAG,CAAC,iBAAJ,GACE;MAAA,MAAA,EAAQ,QAAA,CAAC,IAAD,CAAA;QACN,IAAG,IAAA,IAAS,CAAC,IAAI,CAAC,OAAL,CAAa,YAAb,CAAA,IAA8B,IAAI,CAAC,OAAL,CAAa,QAAb,CAA/B,CAAZ;AACE,iBAAO,KADT;;AAEA,eAAO;MAHD,CAAR;MAIA,EAAA,EAAI,QAAA,CAAC,IAAD,EAAO,QAAP,CAAA;eACF,SAAU,CAAA,IAAA,CAAK,CAAC,IAAhB,CAAqB,QAArB;MADE,CAJJ;MAMA,GAAA,EAAK,QAAA,CAAC,IAAD,EAAO,QAAP,CAAA;eACH,SAAU,CAAA,IAAA,CAAK,CAAC,MAAhB,CAAuB,SAAU,CAAA,IAAA,CAAK,CAAC,OAAhB,CAAwB,QAAxB,CAAvB,EAA0D,CAA1D;MADG;IANL;IAQF,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,QAAZ,EAAsB,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;MACpB,IAAG,GAAG,CAAC,eAAP;QACE,IAAG,GAAG,CAAC,iBAAiB,CAAC,MAAtB,CAA6B,GAAG,CAAC,IAAjC,CAAA,IAA0C,GAAG,CAAC,WAAJ,KAAmB,YAA7D,IAA6E,GAAG,CAAC,WAAJ,KAAmB,oBAAhG,IAAwH,GAAG,CAAC,WAAJ,KAAmB,aAA9I;UACE,IAAA,CAAA,EADF;SAAA,MAAA;UAGE,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,GAAhB,CAAoB,oBAApB,EAHF;SADF;OAAA,MAAA;QAME,IAAA,CAAA,EANF;;IADoB,CAAtB;IASA,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,uBAAZ,EAAqC,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;MACnC,IAAG,GAAG,CAAC,iBAAiB,CAAC,MAAtB,CAA6B,GAAG,CAAC,IAAjC,CAAH;QACE,GAAG,CAAC,eAAJ,GAAsB;QACtB,YAAA,CAAa,eAAb,EAA8B,GAAG,CAAC,IAAlC;AACA,eAAO,GAAG,CAAC,GAAJ,CAAQ,IAAR,EAHT;;aAIA,GAAG,CAAC,GAAJ,CAAQ,aAAR;IALmC,CAArC;WAMA,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,sBAAZ,EAAoC,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;MAClC,IAAG,GAAG,CAAC,iBAAiB,CAAC,MAAtB,CAA6B,GAAG,CAAC,IAAjC,CAAH;QACE,GAAG,CAAC,eAAJ,GAAsB;QACtB,YAAA,CAAa,gBAAb,EAA+B,GAAG,CAAC,IAAnC;AACA,eAAO,GAAG,CAAC,GAAJ,CAAQ,IAAR,EAHT;;aAIA,GAAG,CAAC,GAAJ,CAAQ,aAAR;IALkC,CAApC;EAnCe;AAFjB",
  "sourcesContent": [
    "'use strict'\r\n\r\nmodule.exports = (ndx) ->\r\n  callbacks =\r\n    maintenanceOn: []\r\n    maintenanceOff: []\r\n  if process.env.MAINTENANCE_MODE\r\n    ndx.maintenanceMode = true\r\n  syncCallback = (name, obj, cb) ->\r\n    if callbacks[name] and callbacks[name].length\r\n      for callback in callbacks[name]\r\n        callback obj\r\n    cb?()\r\n  ndx.serverMaintenance =\r\n    authFn: (user) ->\r\n      if user and (user.hasRole('superadmin') or user.hasRole('system'))\r\n        return true\r\n      return false\r\n    on: (name, callback) ->\r\n      callbacks[name].push callback\r\n    off: (name, callback) ->\r\n      callbacks[name].splice callbacks[name].indexOf(callback), 1\r\n  ndx.app.use '/api/*', (req, res, next) ->\r\n    if ndx.maintenanceMode\r\n      if ndx.serverMaintenance.authFn(ndx.user) or req.originalUrl is '/api/login' or req.originalUrl is '/api/refresh-login' or req.originalUrl is '/api/logout'\r\n        next()\r\n      else\r\n        res.status(503).end 'Server Maintenance'\r\n    else\r\n      next()\r\n    return\r\n  ndx.app.get '/api/maintenance-mode', (req, res, next) ->\r\n    if ndx.serverMaintenance.authFn ndx.user\r\n      ndx.maintenanceMode = true\r\n      syncCallback 'maintenanceOn', ndx.user\r\n      return res.end 'OK'\r\n    res.end 'Not allowed'\r\n  ndx.app.get '/api/maintenance-off', (req, res, next) ->\r\n    if ndx.serverMaintenance.authFn ndx.user\r\n      ndx.maintenanceMode = false\r\n      syncCallback 'maintenanceOff', ndx.user\r\n      return res.end 'OK'\r\n    res.end 'Not allowed'"
  ]
}